name: "CD package"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  linter:
    if: github.actor != 'gama-bot' 
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-alpha:
    if: ${{ contains(github.event.head_commit.message, 'ci release alpha') }} 
    needs: [linter]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          token: ${{ secrets.BOT_TOKEN }}

      - name: "Update version alpha && push to GitHub"
        run: |
          # Update version
          cat setup.py | grep version | cut -d '"' -f 2 > version.txt
          VERSION=$(perl -pe 's/^((\d+\.)*)(\d+)(.*)$/$1.($3+1).$4/e' < version.txt) && rm version.txt
          sed -Ei "s/version=\"([0-9]\.?)+\"/version=\"$VERSION\"/g" setup.py
          echo $VERSION
          echo "nVersion=$VERSION" >> $GITHUB_ENV

      - name: "Set up Python"
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: "Install Python"
        run: |
          pip3 install setuptools twine wheel
          pip3 install -r base/pre-processing/requirements.txt
          pip3 install -r base/post-processing/requirements.txt

      - name: "Build package release"
        run: python3 setup.py sdist bdist_wheel

      - name: "Upload to TestPyPi"
        run: python3 -m twine upload --repository testpypi --username "${{ secrets.TESTPYPI_USERNAME }}" --password "${{ secrets.TESTPYPI_PASSWORD }}" --non-interactive --verbose dist/*

      - name: "Git config"
        run: |
          git config --global user.email "${{ secrets.BOT_GH_EMAIL }}"
          git config --global user.name "${{ secrets.BOT_GH_NAME }}"
          git config remote.origin.url "https://${{ secrets.BOT_TOKEN }}@github.com/COMOKIT/comokit4py.git"

      - name: "Commit new version setup"
        run: |
          # Push with tag
          git add setup.py
          git commit --message="[BOT] Update alpha version number to v${{ env.nVersion }}"
          git tag v${{ env.nVersion }} HEAD
          git push 
          git push --tags

  build-stable:
    if: ${{ contains(github.event.head_commit.message, 'ci release stable') }} 
    needs: [linter]
    
    runs-on: ubuntu-latest
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          token: ${{ secrets.BOT_TOKEN }}

      - name: "Update version alpha && push to GitHub"
        run: |
          # Update version
          cat setup.py | grep version | cut -d '"' -f 2 > version.txt
          VERSION=$(perl -pe 's/^(\d+\.)(\d+)(.*)$/$1.($2+1)/e' < version.txt).0 && rm version.txt
          sed -Ei "s/version=\"([0-9]\.?)+\"/version=\"$VERSION\"/g" setup.py
          echo $VERSION
          echo "nVersion=$VERSION" >> $GITHUB_ENV

      - name: "Set up Python"
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: "Install Python"
        run: |
          pip3 install setuptools twine wheel
          pip3 install -r base/pre-processing/requirements.txt
          pip3 install -r base/post-processing/requirements.txt

      - name: "Build package release"
        run: python3 setup.py sdist bdist_wheel

      - name: "Upload to PyPi"
        run: python3 -m twine upload --repository pypi --username "${{ secrets.TESTPYPI_USERNAME }}" --password "${{ secrets.TESTPYPI_PASSWORD }}" --non-interactive --verbose dist/*

      - name: "Git config"
        run: |
          git config --global user.email "${{ secrets.BOT_GH_EMAIL }}"
          git config --global user.name "${{ secrets.BOT_GH_NAME }}"
          git config remote.origin.url "https://${{ secrets.BOT_TOKEN }}@github.com/COMOKIT/comokit4py.git"

      - name: "Commit new version setup"
        run: |
          # Push with tag
          git add setup.py
          git commit --message="[BOT] Update alpha version number to v${{ env.nVersion }}"
          git tag v${{ env.nVersion }} HEAD
          git push 
          git push --tags
